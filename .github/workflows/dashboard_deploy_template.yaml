name: Dashboard Deploy

on:
  workflow_call:
    inputs:
      parameter_file:
        description: "Path to the parameters file"
        required: true
        type: string

jobs:
  deployShiny:

    container:
      image: ghcr.io/dfe-analytical-services/dfe-r-base:latest

    steps:
      - uses: actions/checkout@v4

      - name: Read parameters
        run: |
          DASHBOARD_NAME=$(yq '.dashboard_name' ${{ inputs.parameter_file }})
          DEPLOY_TARGET=$(yq '.deploy_target' ${{ inputs.parameter_file }})
          INSTALL_TERRA_DEPENDENCIES=$(yq '.install_terra_dependencies' ${{ inputs.parameter_file }})
          INSTALL_UNITS_DEPENDENCIES=$(yq '.install_unit_dependencies' ${{ inputs.parameter_file }})
          EXTRA_PACKAGES=$(yq '.extra_packages | join(" ")' ${{ inputs.parameter_file }})

          echo "DASHBOARD_NAME=$DASHBOARD_NAME" >> $GITHUB_ENV
          echo "DEPLOY_TARGET=$DEPLOY_TARGET" >> $GITHUB_ENV
          echo "INSTALL_TERRA_DEPENDENCIES=INSTALL_TERRA_DEPENDENCIES" >> $GITHUB_ENV
          echo "INSTALL_UNITS_DEPENDENCIES=INSTALL_UNITS_DEPENDENCIES" >> $GITHUB_ENV
          echo "EXTRA_PACKAGES=$EXTRA_PACKAGES" >> $GITHUB_ENV

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install terra dependencies
        if: env.INSTALL_TERRA_DEPENDENCIES == 'true'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gdal-bin libgdal-dev proj-bin libproj-dev

      - name: Install units dependencies
        if: env.INSTALL_UNITS_DEPENDENCIES == 'true'
        run: sudo apt-get install libudunits2-dev

      - name: Set environment variables based on branch
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "SHINYAPP_NAME='${{ env.DASHBOARD_NAME }}'" >> $GITHUB_ENV
          else
            echo "SHINYAPP_NAME='dev-${{ env.DASHBOARD_NAME }}'" >> $GITHUB_ENV
          fi

      - name: Restore renv snapshot
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()

      - name: Install extra R packages
        if: env.EXTRA_PACKAGES != ''
        shell: Rscript {0}
        run: |
          packages <- strsplit(Sys.getenv("EXTRA_PACKAGES"), " ")[[1]]
          if (length(packages) > 0 && nchar(packages[1]) > 0) {
            install.packages(packages, repos='https://cloud.r-project.org')
          }

      - name: Install rsconnect
        if: env.DEPLOY_TARGET == 'shinyapps'
        shell: Rscript {0}
        run: |
          if (!requireNamespace("rsconnect", quietly = TRUE)) install.packages("rsconnect")

      - name: Deploy to ShinyApps.io
        if: env.DEPLOY_TARGET == 'shinyapps'
        run: |
          Rscript -e "rsconnect::setAccountInfo(name = 'department-for-education', token = '${{ secrets.SHINYAPPS_TOKEN }}', secret = '${{ secrets.SHINYAPPS_SECRET }}')"
          Rscript -e "rsconnect::deployApp(appName='${{ env.SHINYAPP_NAME }}', forceUpdate = TRUE)"
