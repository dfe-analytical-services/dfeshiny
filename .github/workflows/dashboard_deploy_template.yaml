name: Dashboard Deploy

on:
  workflow_call:
    inputs:
      parameter_file:
        description: "Path to the parameters file"
        required: true
        type: string
    secrets:
      SHINYAPPS_SECRET:
        required: true
      SHINYAPPS_TOKEN:
        required: true

jobs:
  deployShiny:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/dfe-analytical-services/dfe-r-base:latest
      options: --user root
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
      
      - name: Read parameters
        run: |
          DASHBOARD_NAME=$(yq -r '.dashboard_name' ${{ inputs.parameter_file }})
          DEPLOY_TARGET=$(yq -r '.deploy_target' ${{ inputs.parameter_file }})

          echo "DASHBOARD_NAME=$DASHBOARD_NAME" >> $GITHUB_ENV
          echo "DEPLOY_TARGET=$DEPLOY_TARGET" >> $GITHUB_ENV

      - name: Set environment variables based on branch
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "SHINYAPP_NAME=$DASHBOARD_NAME" >> $GITHUB_ENV
          else
            echo "SHINYAPP_NAME=dev-$DASHBOARD_NAME" >> $GITHUB_ENV
          fi

      - name: Restore renv snapshot
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()

      - name: Install rsconnect
        shell: Rscript {0}
        run: |
          if (!requireNamespace("rsconnect", quietly = TRUE)) install.packages("rsconnect")

      - name: Deploy to ShinyApps.io
        if: github.event_name != 'pull_request'
        run: >
          Rscript
          -e "rsconnect::setAccountInfo(name = 'department-for-education', token = '${{secrets.SHINYAPPS_TOKEN}}', secret = '${{secrets.SHINYAPPS_SECRET}}')"
          -e "rsconnect::deployApp(appName='${{env.SHINYAPP_NAME}}', forceUpdate = TRUE)"
