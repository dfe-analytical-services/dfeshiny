% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cookies.R
\name{cookie_banner_server}
\alias{cookie_banner_server}
\title{cookie_banner_server}
\usage{
cookie_banner_server(
  id,
  input_cookies,
  input_clear,
  parent_session,
  google_analytics_key = NULL
)
}
\arguments{
\item{id}{Shiny tag shared with cookie_banner_ui()}

\item{input_cookies}{The cookie input passed from cookies.js (should always
be reactive(input$cookies))}

\item{input_clear}{The state of the cookie reset button provided by
dfeshiny::support_panel(). Should always be set to reactive(input$cookie_consent_clear).}

\item{parent_session}{This should be the R Shiny app session}

\item{google_analytics_key}{Provide the GA 10 digit key of the form
"ABCDE12345"}
}
\description{
cookie_banner_server() provides the server module to be used alongside
cookie_banner_ui(). Place cookie_banner_server() as a call in your server.R
file to provide the server functions to control users being able to accept or
reject cookie consent for the provision of Google Analytics tracking on DfE
R-Shiny dashboards.

To use the banner, first copy the file cookie-consent.js from the js/ folder
of this package to the www/ folder of your R-Shiny app. Then add the
following lines to your ui.R:
dfe_cookie_script()
cookie_banner_ui("cookies", name = "My DfE R-Shiny data dashboard")

And add the following in server.R (after updating the google analytics key):
output$cookie_status <- dfeshiny::cookie_banner_server(
"cookies",
input_cookies = reactive(input$cookies),
input_clear = reactive(input$cookie_consent_clear),
parent_session = session,
google_analytics_key = "ABCDE12345"
)

Note that you should also include dfeshiny::support_panel() in your
navListPanel()
}
\examples{
output$cookie_status <- cookie_banner_server(
  "cookies",
  input_cookies = reactive(input$cookies),
  input_clear = reactive(input$cookie_consent_clear),
  parent_session = session,
  google_analytics_key = ""
)
}
